---
name: perm
templates:
  bpm.yml.erb: config/bpm.yml
  dns_health_check.erb: bin/dns_health_check
  perm.erb: bin/perm
  tls-ca.crt.erb: config/certs/tls-ca.crt
  tls.crt.erb: config/certs/tls.crt
  tls.key.erb: config/certs/tls.key
  sql_tls_ca.crt.erb: config/certs/sql_tls_ca.crt
  uaa_ca.crt.erb: config/certs/uaa_ca.crt

packages:
- perm

provides:
- name: perm
  type: perm
  properties:
  - hostname
  - port
  - listen_port  # DEPRECATED

properties:
  hostname:
    description: Hostname on which the PERM service resides
    default: perm.service.cf.internal
  port:
    description: Port on which to listen for gRPC traffic
    default: 6283
  listen_port:
    description: DEPRECATED
    default: 6283
  log_level:
    description: The log level for the Perm server.
    default: info
  log_audit_events:
    description: Enable logging of audit events to /var/vcap/sys/log/perm/audit.log
    default: true
  max_connection_idle_time:
    description: The amount of time before an idle connection will be closed with a GoAway.
    default: 10s
  tls:
    description: Certificate and private key for TLS connection to Perm server
    type: certificate
    example: |
      ca: |
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      certificate: |
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      private_key: |
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----
  sql.db.driver:
    description: "Database driver to use for SQL backend (e.g. mysql, postgres)"
  sql.db.host:
    description: "Host for SQL backend"
  sql.db.port:
    description: "Port for SQL backend"
  sql.db.schema:
    description: "Database name to use for connecting to SQL backend"
  sql.db.username:
    description: "Username to use for connecting to SQL backend"
  sql.db.password:
    description: "Password to use for connecting to SQL backend"

  sql.tls.required:
    description: Require TLS connections to the SQL backend
    default: false
  sql.tls.ca_certs:
    description: An array of CA certificate(s) for TLS connection to the SQL backend. Allows multiple in case of rotation.
    default: []

  sql.tuning.connection_max_lifetime:
    description: Limit the lifetime of a SQL connection. If set <= 0, the connection may live forever.
    example: 10s
    default: 0

  feature_flags.auth:
    description: Require auth to the perm service
    default: false

  uaa.hostname:
    description: The public hostname of the UAA.
    default: uaa.service.cf.internal
  uaa.port:
    description: The TLS-enabled port of the UAA.
    default: 8443
  uaa.tls.ca_certs:
    description: An array of CA certificate(s) for TLS connection to the OAuth2 server. Allows multiple in case of rotation.
    default: []
