---
name: cc-to-perm-migrator

templates:
  uaa-ca.crt: config/certs/uaa-ca.crt
  cc-ca.crt: config/certs/cc-ca.crt
  perm-ca.crt.erb: config/certs/perm-ca.crt
  cc-to-perm-migrator.yml: config/cc-to-perm-migrator.yml
  run: bin/run

packages:
- cc-to-perm-migrator
- perm

consumes:
- name: perm
  type: perm

properties:
  log_level:
    description: The log level for the Cloud Controller Migrator.
    default: info

  dry_run:
    description: Calculate the number of assignments in the Cloud Controller but do not attempt to migrate them to Perm. Note that this may still be time-consuming.
    default: true

  uaa.url:
    description: The public HTTPS url of the UAA.

  uaa.ca_certs:
    description: An array of certificate authorities being used by UAA. Allows multiple in case of rotation.
    default: []

  cloud_controller.url:
    description: The public url of the Cloud Controller API.

  cloud_controller.client_id:
    description: The ID for the UAA client used to connect to the Cloud Controller API.

  cloud_controller.client_secret:
    description: The secret for the UAA client used to connect to the Cloud Controller API

  cloud_controller.client_scopes:
    description: The scopes to request for the UAA client used to connect to the Cloud Controller API.
    example:
    - cloud_controller.admin_read_only

  cloud_controller.ca_certs:
    description: An array of certificate authorities being used by CC. Allows multiple in case of rotation.
    default: []

  perm.hostname:
    description: Hostname used to resolve the address of Perm
    default: "perm.service.cf.internal"
  perm.ca_certs:
    description: An array of certificate authorities being used by Perm. Allows multiple in case of rotation.
    default: []

  sql.db.driver:
    description: "Database driver to use for SQL backend (e.g. mysql, postgres)"
  sql.db.host:
    description: "Host for SQL backend"
  sql.db.port:
    description: "Port for SQL backend"
  sql.db.schema:
    description: "Database name to use for connecting to SQL backend"
  sql.db.username:
    description: "Username to use for connecting to SQL backend"
  sql.db.password:
    description: "Password to use for connecting to SQL backend"
